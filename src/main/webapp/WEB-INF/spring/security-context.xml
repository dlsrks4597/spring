<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 인증관련 빈 설정 -->
	<bean id="customAccessDenied" class="kr.ync.security.CustomAccessDeniedHandler"></bean>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserDetailsService"	class="kr.ync.security.CustomUserDetailsService"></bean>
	
	<security:http>
		
		<!-- <security:form-login login-page="/customLogin" />  -->
		<!-- <security:logout logout-url="/customLogout"	invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" /> -->
		<!-- <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" /> -->
		<security:access-denied-handler ref="customAccessDenied" />
		
		<security:intercept-url pattern="/front/index" access="permitAll" />
		<security:intercept-url pattern="/front/newslist" access="hasAnyRole('ROLE_USER, ROLE_ADMIN')"/>
		<security:intercept-url pattern="/front/about" access="hasRole('ROLE_ADMIN')"/>
		
		<security:form-login login-page="/customLogin" />
		<security:logout logout-url="/customLogout"	invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" />
		
	</security:http>

	<!-- <security:authentication-manager> -->
	<!-- 	<security:authentication-provider user-service-ref="customUserDetailsService"> -->
	<!-- 		<security:password-encoder ref="bcryptPasswordEncoder" /> -->
	<!-- 	</security:authentication-provider> -->
	<!-- </security:authentication-manager> -->
	
	<security:authentication-manager>
		<security:authentication-provider>
		<!--
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
			</security:user-service>
			 -->
			 <security:jdbc-user-service data-source-ref="dataSource" 
			 	users-by-username-query="select member_id, password, enabled from gf_member where member_id = ?"
			 	authorities-by-username-query="select member_id, auth from gf_member_auth where member_id = ?"/>
			 	<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>
